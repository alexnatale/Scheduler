{"version":3,"sources":["ScheduleEditor.jsx","index.js"],"names":["HOUR_HEIGHT","DAY_START","DAY_END","DAYS","DAY_LABELS","initialEventsRaw","parseTimeFloat","t","time","mer","trim","split","h","m","map","Number","groupColor","course","startsWith","test","includes","ScheduleEditor","events","setEvents","useState","e","i","id","String","suffix","day","start","end","isLab","instructor","editingId","setEditingId","courseDayPattern","useMemo","order","M","T","W","Th","F","Sa","forEach","Set","add","Object","fromEntries","entries","_ref","c","set","Array","from","sort","a","b","join","layout","byDay","reduce","acc","d","_objectSpread","[object Object]","ev","push","pos","items","colEnds","col","length","totalCols","hours","_","React","createElement","className","onClick","addBlank","newId","Date","now","toString","prev","Plus","exportCSV","csv","r","blob","Blob","type","link","document","href","URL","createObjectURL","download","click","FileText","async","node","getElementById","canvas","html2canvas","backgroundColor","toDataURL","Download","key","style","height","DragDropContext","onDragEnd","res","destination","draggableId","droppableId","idx","Droppable","prov","maxCols","Math","max","filter","_layout$e$id","assign","ref","innerRef","droppableProps","width","top","left","Draggable","index","drag","draggableProps","dragHandleProps","concat","stopPropagation","find","duplicate","Copy","EditIcon","remove","Trash2","placeholder","field","value","onChange","updateField","target","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.5f01a77b.chunk.js","sourcesContent":["// src/ScheduleEditor.jsx\r\n\r\nimport React, { useState, useMemo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\nimport html2canvas from 'html2canvas';\r\nimport {\r\n  Copy,\r\n  Download,\r\n  FileText,\r\n  Plus,\r\n  Trash2,\r\n  Edit as EditIcon,\r\n} from 'lucide-react';\r\n\r\n// layout constants\r\nconst HOUR_HEIGHT = 60; // px per hour\r\nconst DAY_START = 7;\r\nconst DAY_END = 22;\r\nconst DAYS = ['M', 'T', 'W', 'Th', 'F', 'Sa'];\r\nconst DAY_LABELS = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n\r\n// sample data\r\nconst initialEventsRaw = [\r\n  ['ASTR 109', 'Lec', 'M', '1:15 PM', '2:40 PM', false, ''],\r\n  // … (rest of your array unchanged) :contentReference[oaicite:0]{index=0}:contentReference[oaicite:1]{index=1}\r\n];\r\n\r\n// time helpers\r\nconst parseTimeFloat = (t) => {\r\n  const [time, mer] = t.trim().split(' ');\r\n  let [h, m] = time.split(':').map(Number);\r\n  if (mer === 'PM' && h !== 12) h += 12;\r\n  if (mer === 'AM' && h === 12) h = 0;\r\n  return h + m / 60;\r\n};\r\nconst to12Hr = (h24, m) => {\r\n  const mer = h24 >= 12 ? 'PM' : 'AM';\r\n  let h = h24 % 12;\r\n  if (h === 0) h = 12;\r\n  return `${h}:${m.toString().padStart(2, '0')} ${mer}`;\r\n};\r\nconst fromInputTime = (input) => {\r\n  const [h, m] = input.split(':').map(Number);\r\n  return to12Hr(h, m);\r\n};\r\n\r\n// simple color logic\r\nconst groupColor = (course) => {\r\n  if (course.startsWith('ASTR 1')) return 'bg-blue-200';\r\n  if (/PHYS 21[7-9]/.test(course)) return 'bg-green-200';\r\n  if (['PHYS 210', 'PHYS 211'].includes(course)) return 'bg-amber-200';\r\n  return 'bg-gray-200';\r\n};\r\n\r\nexport default function ScheduleEditor() {\r\n  const [events, setEvents] = useState(\r\n    initialEventsRaw.map((e, i) => ({\r\n      id: String(i),\r\n      course: e[0],\r\n      suffix: e[1],\r\n      day: e[2],\r\n      start: e[3],\r\n      end: e[4],\r\n      isLab: e[5],\r\n      instructor: e[6],\r\n    }))\r\n  );\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  // build course↔days pattern\r\n  const courseDayPattern = useMemo(() => {\r\n    const order = { M: 1, T: 2, W: 3, Th: 4, F: 5, Sa: 6 };\r\n    const map = {};\r\n    events.forEach((e) => {\r\n      map[e.course] = map[e.course] || new Set();\r\n      map[e.course].add(e.day);\r\n    });\r\n    return Object.fromEntries(\r\n      Object.entries(map).map(([c, set]) => [\r\n        c,\r\n        Array.from(set)\r\n          .sort((a, b) => order[a] - order[b])\r\n          .join('/'),\r\n      ])\r\n    );\r\n  }, [events]);\r\n\r\n  // calculate columns & positions\r\n  const layout = useMemo(() => {\r\n    const byDay = DAYS.reduce((acc, d) => ({ ...acc, [d]: [] }), {});\r\n    events.forEach((ev) => byDay[ev.day].push(ev));\r\n    const pos = {};\r\n    DAYS.forEach((d) => {\r\n      const items = byDay[d].sort(\r\n        (a, b) => parseTimeFloat(a.start) - parseTimeFloat(b.start)\r\n      );\r\n      const colEnds = [];\r\n      items.forEach((ev) => {\r\n        let col = 0;\r\n        while (col < colEnds.length && parseTimeFloat(ev.start) < colEnds[col]) {\r\n          col++;\r\n        }\r\n        if (col === colEnds.length) colEnds.push(parseTimeFloat(ev.end));\r\n        else colEnds[col] = parseTimeFloat(ev.end);\r\n        pos[ev.id] = { col, totalCols: colEnds.length };\r\n      });\r\n    });\r\n    return pos;\r\n  }, [events]);\r\n\r\n  // handlers\r\n  const onDragEnd = (res) => {\r\n    if (!res.destination) return;\r\n    setEvents((prev) =>\r\n      prev.map((e) =>\r\n        e.id === res.draggableId\r\n          ? { ...e, day: res.destination.droppableId }\r\n          : e\r\n      )\r\n    );\r\n  };\r\n  const duplicate = (id) =>\r\n    setEvents((prev) => {\r\n      const ev = prev.find((e) => e.id === id);\r\n      return [...prev, { ...ev, id: Date.now().toString(), day: 'F' }];\r\n    });\r\n  const remove = (id) => setEvents((prev) => prev.filter((e) => e.id !== id));\r\n  const addBlank = () => {\r\n    const newId = Date.now().toString();\r\n    setEvents((prev) => [\r\n      ...prev,\r\n      { id: newId, course: 'NEW', suffix: '', day: 'M', start: '8:00 AM', end: '9:00 AM', isLab: false, instructor: '' },\r\n    ]);\r\n    setEditingId(newId);\r\n  };\r\n  const updateField = (id, field, value) =>\r\n    setEvents((prev) =>\r\n      prev.map((e) => (e.id === id ? { ...e, [field]: value } : e))\r\n    );\r\n\r\n  // exports\r\n  const exportPNG = async () => {\r\n    const node = document.getElementById('schedule-area');\r\n    if (!node) return;\r\n    const canvas = await html2canvas(node, { backgroundColor: '#fff' });\r\n    const link = document.createElement('a');\r\n    link.href = canvas.toDataURL();\r\n    link.download = 'schedule.png';\r\n    link.click();\r\n  };\r\n  const exportCSV = () => {\r\n    const header = ['Course', 'Suffix', 'Day', 'Start', 'End', 'Instructor'];\r\n    const rows = events.map((e) => [\r\n      e.course,\r\n      e.suffix,\r\n      e.day,\r\n      e.start,\r\n      e.end,\r\n      e.instructor,\r\n    ]);\r\n    const csv = [header, ...rows].map((r) => r.join(',')).join('\\n');\r\n    const blob = new Blob([csv], { type: 'text/csv' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'schedule.csv';\r\n    link.click();\r\n  };\r\n\r\n  const hours = Array.from({ length: DAY_END - DAY_START + 1 }, (_, i) => DAY_START + i);\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col p-4 gap-4 rounded-2xl shadow-lg bg-white\">\r\n      {/* header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <h2 className=\"text-xl font-semibold\">Weekly Schedule</h2>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            className=\"inline-flex items-center px-2 py-1 border rounded text-sm\"\r\n            onClick={addBlank}\r\n          >\r\n            <Plus className=\"w-4 h-4 mr-1\" /> Add Class\r\n          </button>\r\n          <button\r\n            className=\"inline-flex items-center px-2 py-1 border rounded text-sm\"\r\n            onClick={exportCSV}\r\n          >\r\n            <FileText className=\"w-4 h-4 mr-1\" /> CSV\r\n          </button>\r\n          <button\r\n            className=\"inline-flex items-center px-2 py-1 border rounded text-sm\"\r\n            onClick={exportPNG}\r\n          >\r\n            <Download className=\"w-4 h-4 mr-1\" /> PNG\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* body */}\r\n      <div className=\"flex overflow-auto flex-1\">\r\n        {/* time ruler */}\r\n        <div className=\"flex flex-col items-end pr-2 text-xs select-none\">\r\n          {hours.map((h) => (\r\n            <div\r\n              key={h}\r\n              style={{ height: HOUR_HEIGHT }}\r\n              className=\"w-12 text-right pr-1 leading-none\"\r\n            >\r\n              {h}:00\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* grid */}\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div id=\"schedule-area\" className=\"relative flex border-l border-gray-300 flex-1\">\r\n            {DAYS.map((d, idx) => (\r\n              <Droppable key={d} droppableId={d}>\r\n                {(prov) => {\r\n                  const maxCols = Math.max(\r\n                    ...events.filter((e) => e.day === d).map((e) => layout[e.id]?.totalCols || 1),\r\n                    1\r\n                  );\r\n                  return (\r\n                    <div\r\n                      ref={prov.innerRef}\r\n                      {...prov.droppableProps}\r\n                      className=\"border-r border-gray-300 relative\"\r\n                      style={{ width: maxCols * 120 }}\r\n                    >\r\n                      <div className=\"text-center font-medium text-sm py-1 bg-gray-50 sticky top-0 z-10 border-b border-gray-300\">\r\n                        {DAY_LABELS[idx]}\r\n                      </div>\r\n                      {events\r\n                        .filter((e) => e.day === d)\r\n                        .map((e) => {\r\n                          const pos = layout[e.id];\r\n                          const top = (parseTimeFloat(e.start) - DAY_START) * HOUR_HEIGHT;\r\n                          const height = (parseTimeFloat(e.end) - parseTimeFloat(e.start)) * HOUR_HEIGHT;\r\n                          const left = pos.col * 120;\r\n                          return (\r\n                            <Draggable key={e.id} draggableId={e.id} index={0}>\r\n                              {(drag) => (\r\n                                <div\r\n                                  ref={drag.innerRef}\r\n                                  {...drag.draggableProps}\r\n                                  {...drag.dragHandleProps}\r\n                                  style={{\r\n                                    ...drag.draggableProps.style,\r\n                                    top,\r\n                                    left,\r\n                                    width: 112,\r\n                                    height: height - 4,\r\n                                  }}\r\n                                  className={`${groupColor(e.course)} absolute p-2 rounded-2xl shadow-md text-xs leading-tight overflow-hidden cursor-move`}\r\n                                >\r\n                                  <div className=\"font-semibold truncate text-[0.7rem]\">\r\n                                    {e.course} {e.suffix}\r\n                                  </div>\r\n                                  <div className=\"text-[0.7rem]\">{courseDayPattern[e.course]}</div>\r\n                                  <div className=\"text-[0.7rem]\">\r\n                                    {e.start} – {e.end}\r\n                                  </div>\r\n                                  <div className=\"italic text-gray-600 truncate\">\r\n                                    {e.instructor || '<no instructor>'}\r\n                                  </div>\r\n                                  <div className=\"absolute bottom-1 right-1 flex gap-1 opacity-0 group-hover:opacity-100 transition\">\r\n                                    <button onClick={(ev) => { ev.stopPropagation(); duplicate(e.id); }} className=\"p-0\">\r\n                                      <Copy className=\"w-4 h-4\" />\r\n                                    </button>\r\n                                    <button onClick={(ev) => { ev.stopPropagation(); setEditingId(e.id); }} className=\"p-0\">\r\n                                      <EditIcon className=\"w-4 h-4\" />\r\n                                    </button>\r\n                                    <button onClick={(ev) => { ev.stopPropagation(); remove(e.id); }} className=\"p-0\">\r\n                                      <Trash2 className=\"w-4 h-4\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                      {prov.placeholder}\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Droppable>\r\n            ))}\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n\r\n      {/* simple edit dialog */}\r\n      {editingId && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-4 rounded shadow-lg w-80\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Edit Class</h3>\r\n            {(() => {\r\n              const ev = events.find((e) => e.id === editingId);\r\n              if (!ev) return null;\r\n              return (\r\n                <div className=\"space-y-3 text-sm\">\r\n                  {['course','suffix','instructor'].map((field) => (\r\n                    <div key={field} className=\"flex items-center gap-2\">\r\n                      <label className=\"w-20 capitalize\">{field}</label>\r\n                      <input\r\n                        className=\"flex-1 border rounded px-2 py-1\"\r\n                        value={ev[field]}\r\n                        onChange={(e) => updateField(ev.id, field, e.target.value)}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"flex justify-end gap-2 mt-4\">\r\n                    <button\r\n                      className=\"px-3 py-1 border rounded text-sm\"\r\n                      onClick={() => setEditingId(null)}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';              // your tailwind or other\r\nimport ScheduleEditor from './ScheduleEditor';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<ScheduleEditor />);\r\n"],"sourceRoot":""}